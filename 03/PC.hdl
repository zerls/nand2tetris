// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:


    Not(in=reset,out=nreset);
    Not(in=load,out=nload);
    And(a=nreset,b=nload,out=w);
    And(a=w,b=inc,out=v);
    Or(a=reset,b=v,out=sel0);
    Or(a=load,b=reset,out=sel1);

    Inc16(in=ft,out=i2);

    Mux4Way16(a=ft,b=i2,c=in,d=false,sel[0]=sel0,sel[1]=sel1,out=fn);
    Register(in=fn,load=true,out=ft,out=out);

    //other implment
    // Mux16(a=in, b=false, sel=reset, out=rst);
    // Or(a=load, b=reset, out=sw1);
    // Mux16(a=loop, b=rst, sel=sw1, out=regin);
    // Or(a=sw1, b=inc, out=regload);
    // Register(in=regin, load=regload, out=regout, out=out);
    // Inc16(in=regout, out=inc1);
    // Mux16(a=regout, b=inc1, sel=inc, out=loop);
}
