// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    // CHIP Register {
    // IN in[16], load;
    // OUT out[16];

    // CHIP DMux8Way {
    // IN in, sel[3];
    // OUT a, b, c, d, e, f, g, h;
    
    // CHIP Mux8Way16 {
    // IN a[16], b[16], c[16], d[16],
    //    e[16], f[16], g[16], h[16],
    //   sel[3];
    // OUT out[16];


    DMux8Way(in=load,sel=address,a=r0,b=r1,c=r2,d=r3,e=r4,f=r5,g=r6,h=r7);
    Register(in=in,load=r0 ,out=o0);
    Register(in=in,load=r1 ,out=o1);
    Register(in=in,load=r2 ,out=o2);
    Register(in=in,load=r3 ,out=o3);
    Register(in=in,load=r4 ,out=o4);
    Register(in=in,load=r5 ,out=o5);
    Register(in=in,load=r6 ,out=o6);
    Register(in=in,load=r7 ,out=o7);
    Mux8Way16(a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7,sel=address,out=out);

}